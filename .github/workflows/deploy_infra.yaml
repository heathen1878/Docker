name: Deploy Infra

on:
  push:
    branches: master
    paths:
      - '**.tf'
  workflow_dispatch:

jobs:
  cost_infra:
    uses: ./.github/workflows/infracost.yaml
    with:
      BASE_BRANCH: ${{ github.event.pull_request.base.ref }}
      PR_ID: ${{ github.event.pull_request.number }}
      PR_STATUS: ${{ github.event.pull_request.merged }}
      PR_URL: ${{ github.event.pull_request.html_url }}
    secrets:
      API_KEY: ${{ secrets.INFRACOST_API_KEY }}

  deploy_infra:
    runs-on: ubuntu-latest
    name: Deploy Infrastructure using Terraform

    defaults:
      run:
        working-directory: ./iac/frontend_app_service

    steps:
      - name: checkout repository
        uses: actions/checkout@v3

      - name: auth
        uses: azure/login@v2
        with:
          creds: '{"clientId": "${{ secrets.ARM_CLIENT_ID }}", "clientSecret": "${{ secrets.ARM_CLIENT_SECRET }}", "tenantId": "${{ secrets.ARM_TENANT_ID }}", "subscriptionId": "${{ vars.ARM_SUBSCRIPTION_ID }}"}'

      - name: get runner ip
        id: runner_ip
        run: |
          IP_ADDR=$(curl -s https://ifconfig.me/ip)
          echo "IPADDR=$IP_ADDR" >> $GITHUB_OUTPUT

      - name: modify state storage acl
        run: |
          az storage account network-rule add --account-name ${{ vars.STATE_STORAGE_ACCOUNT }} --ip-address ${{ steps.runner_ip.outputs.IPADDR }} --subscription ${{ vars.ARM_SUBSCRIPTION_ID }}  > /dev/null 2>&1
          echo "Pausing for 60 seconds to ensure the ACL has been set..."
          sleep 60

      - name: install terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ vars.TERRAFORM_VERSION }}
      
      - name: terraform init
        id: init
        run: |
          # export variables as environment variables
          export ARM_CLIENT_ID=${{ secrets.ARM_CLIENT_ID }}
          export ARM_CLIENT_SECRET=${{ secrets.ARM_CLIENT_SECRET }}
          export ARM_TENANT_ID=${{ secrets.ARM_TENANT_ID }}
          export ARM_SUBSCRIPTION_ID=${{ vars.ARM_SUBSCRIPTION_ID }}
          export ARM_USE_AZUREAD=true
          
          terraform init \
          -upgrade \
          -input=false \
          -backend-config="storage_account_name=${{ vars.STATE_STORAGE_ACCOUNT }}" \
          -backend-config="container_name=${{ vars.STATE_STORAGE_CONTAINER }}" \
          -backend-config="key=prod.tfstate"

      - name: terraform apply
        id: apply
        run: |
          # export variables as environment variables
          export ARM_CLIENT_ID=${{ secrets.ARM_CLIENT_ID }}
          export ARM_CLIENT_SECRET=${{ secrets.ARM_CLIENT_SECRET }}
          export ARM_TENANT_ID=${{ secrets.ARM_TENANT_ID }}
          export ARM_SUBSCRIPTION_ID=${{ vars.ARM_SUBSCRIPTION_ID }}
          export ARM_USE_AZUREAD=true
          export TF_VAR_environment="prod"
          export TF_VAR_docker_image_tag=${{ vars.DOCKER_TAG }}
          
          terraform apply --auto-approve

      - name: modify state storage acl - clean up
        if: always()
        run: |
          az storage account network-rule remove --account-name ${{ vars.STATE_STORAGE_ACCOUNT }} --ip-address ${{ steps.runner_ip.outputs.IPADDR }}  --subscription ${{ vars.ARM_SUBSCRIPTION_ID }}  > /dev/null 2>&1
